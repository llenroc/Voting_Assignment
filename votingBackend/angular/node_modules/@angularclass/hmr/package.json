{
  "_args": [
    [
      {
        "raw": "@angularclass/hmr@https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
        "scope": "@angularclass",
        "escapedName": "@angularclass%2fhmr",
        "name": "@angularclass/hmr",
        "rawSpec": "https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
        "spec": "https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
        "type": "remote"
      },
      "C:\\Dev\\votingassignment\\votingBackend\\angular"
    ]
  ],
  "_from": "@angularclass/hmr@>=1.2.2 <2.0.0",
  "_id": "@angularclass/hmr@1.2.2",
  "_inCache": true,
  "_location": "/@angularclass/hmr",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@angularclass/hmr@https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
    "scope": "@angularclass",
    "escapedName": "@angularclass%2fhmr",
    "name": "@angularclass/hmr",
    "rawSpec": "https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
    "spec": "https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
  "_shasum": "46a18f89a1e94d05c268b83c9480e005f73fc265",
  "_shrinkwrap": null,
  "_spec": "@angularclass/hmr@https://registry.npmjs.org/@angularclass/hmr/-/hmr-1.2.2.tgz",
  "_where": "C:\\Dev\\votingassignment\\votingBackend\\angular",
  "author": {
    "name": "PatrickJS",
    "email": "github@gdi2290.com"
  },
  "bugs": {
    "url": "https://github.com/angularclass/angular2-hmr/issues"
  },
  "dependencies": {},
  "description": "angular2-hmr: Hot Module Replacement for Webpack and Angular 2",
  "devDependencies": {
    "@angular/core": "2.1.2",
    "rxjs": "5.0.0-rc.1",
    "typescript": "2.0.3",
    "typings": "^0.7.9",
    "webpack": "^1.13.0",
    "zone.js": "0.6.26"
  },
  "files": [
    "dist",
    "src"
  ],
  "homepage": "https://github.com/angularclass/angular2-hmr#readme",
  "license": "Apache-2.0",
  "main": "dist/index.js",
  "name": "@angularclass/hmr",
  "optionalDependencies": {},
  "readme": "<p align=\"center\">\n  <a href=\"http://courses.angularclass.com/courses/angular-2-fundamentals\" target=\"_blank\">\n    <img width=\"438\" alt=\"Angular 2 Fundamentals\" src=\"https://cloud.githubusercontent.com/assets/1016365/17200649/085798c6-543c-11e6-8ad0-2484f0641624.png\">\n  </a>\n</p>\n\n---\n\n\n# Angular 2 Hot Module Replacement\n> Angular2-HMR\n\n`npm install @angularclass/hmr @angularclass/hmr-loader`\n\nPlease see repository [AngularClass/angular2-seed](https://github.com/AngularClass/angular2-seed) for a working example.  \nAlso download [AngularClass/angular2-hmr-loader](https://github.com/AngularClass/angular2-hmr-loader)\n\n![hmr-state-dom](https://cloud.githubusercontent.com/assets/1016365/18380378/e573320e-762b-11e6-99e0-cc110ffacc6a.gif)\n\n`main.browser.ts`\n```typescript\nimport { removeNgStyles, createNewHosts, bootloader } from '@angularclass/hmr';\n\n@NgModule({\n  bootstrap: [ App ],\n  declarations: [ App ],\n  imports: [\n    // Angular 2\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([], {\n      useHash: true\n    }),\n    // app\n    appModule\n    // vendors\n  ],\n  providers: []\n})\nclass MainModule {\n  constructor(public appRef: ApplicationRef) {}\n  hmrOnInit(store) {\n    if (!store || !store.state) return;\n    console.log('HMR store', store);\n    console.log('store.state.data:', store.state.data)\n    // inject AppStore here and update it\n    // this.AppStore.update(store.state)\n    if ('restoreInputValues' in store) {\n      store.restoreInputValues();\n    }\n    // change detection\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n  hmrOnDestroy(store) {\n    var cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\n    // recreate elements\n    store.disposeOldHosts = createNewHosts(cmpLocation)\n    // inject your AppStore and grab state then set it on store\n    // var appState = this.AppStore.get()\n    store.state = {data: 'yolo'};\n    // store.state = Object.assign({}, appState)\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n  hmrAfterDestroy(store) {\n    // display new elements\n    store.disposeOldHosts()\n    delete store.disposeOldHosts;\n    // anything you need done the component is removed\n  }\n}\n\nexport function main() {\n  return platformBrowserDynamic().bootstrapModule(MainModule);\n}\n\n// boot on document ready\nbootloader(main);\n\n```\n`bootloader` is only needed to detect that the dom is ready before bootstraping otherwise bootstrap. This is needed because that dom is already ready during reloading.\n\n## Important Helpers\n* **removeNgStyles**: remove angular styles\n* **createNewHosts and disposeOldHosts**: recreate root elements for bootstrapping\n* **bootloader**: boot on document ready or boot if it's already ready\n* **createInputTransfer** and **restoreInputValues**: transfer input DOM state during replacement\n\n## Production\nIn production you only need bootloader which just does this:\n```typescript\nexport function bootloader(main) {\n  if (document.readyState === 'complete') {\n    main()\n  } else {\n    document.addEventListener('DOMContentLoaded', main);\n  }\n}\n```\nYou would bootstrap your app the normal way, in production, afer dom is ready. Also, in production, you should remove the loader:\n```es6\n        {\n          test: /\\.ts$/,\n          loaders: [\n            'awesome-typescript-loader',\n          ].concat(prod ? [] : '@angularclass/hmr-loader')\n        },\n```\n\n___\n\nenjoy â€” **AngularClass**\n\n<br><br>\n\n[![AngularClass](https://cloud.githubusercontent.com/assets/1016365/9863770/cb0620fc-5af7-11e5-89df-d4b0b2cdfc43.png  \"Angular Class\")](https://angularclass.com)\n##[AngularClass](https://angularclass.com)\n> Learn AngularJS, Angular 2, and Modern Web Development from the best.\n> Looking for corporate Angular training, want to host us, or Angular consulting? patrick@angularclass.com\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/angularclass/angular2-hmr.git"
  },
  "scripts": {
    "build": "tsc || true",
    "prebuild": "rm -rf dist",
    "prepublish": "npm run typings -- install && npm run build",
    "test": "echo \"Error: no test specified\" && exit 1",
    "typings": "typings"
  },
  "typings": "dist/index.d.ts",
  "version": "1.2.2"
}
